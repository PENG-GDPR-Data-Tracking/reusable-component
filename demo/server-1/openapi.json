{
  "openapi": "3.0.1",
  "info": {
    "title": "Demo Server 1 API",
    "description": "Demo Server API\n",
    "version": "1"
  },
  "servers": [
    {
      "url": "http://localhost:9411/api/v1"
    },
    {
      "url": "https://localhost:9411/api/v1"
    }
  ],
  "paths": {
    "/user/{id}": {
      "get": {
        "description": "Returns the user with the given id\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unqiue identifier\n",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 16,
              "pattern": "[a-f0-9]{16,32}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The logical operation this span represents in lowercase (e.g. rpc method).\nLeave absent if unknown.\n\nAs these are lookup labels, take care to ensure names are low cardinality.\nFor example, do not embed variables into the name.\n"
          },
          "id": {
            "maxLength": 16,
            "minLength": 16,
            "pattern": "[a-f0-9]{16}",
            "type": "string",
            "description": "Unique 64bit identifier for this operation within the trace.\n\nEncoded as 16 lowercase hex characters. For example ffdc9bb9a6453df3\n"
          },
          "kind": {
            "type": "string",
            "description": "When present, kind clarifies timestamp, duration and remoteEndpoint. When\nabsent, the span is local or incomplete. Unlike client and server, there\nis no direct critical path latency relationship between producer and\nconsumer spans.\n",
            "enum": [
              "CLIENT",
              "SERVER",
              "PRODUCER",
              "CONSUMER"
            ]
          },
          "signUpDate": {
            "type": "integer",
            "description": "Epoch microseconds of the start of this span, possibly absent if\nincomplete.\n\nFor example, 1502787600000000 corresponds to 2017-08-15 09:00 UTC\n\nThis value should be set directly by instrumentation, using the most\nprecise value possible. For example, gettimeofday or multiplying epoch\nmillis by 1000.\n\nThere are three known edge-cases where this could be reported absent.\n * A span was allocated but never started (ex not yet received a timestamp)\n * The span's start event was lost\n * Data about a completed span (ex tags) were sent after the fact\n",
            "format": "int64"
          },
          "duration": {
            "minimum": 1,
            "type": "integer",
            "description": "Duration in **microseconds** of the critical path, if known. Durations of less\nthan one are rounded up. Duration of children can be longer than their\nparents due to asynchronous operations.\n\nFor example 150 milliseconds is 150000 microseconds.\n",
            "format": "int64"
          }
        },
        "description": "A User of this application\n",
        "example": {
          "id": "352bff9a74ca9ad2",
          "traceId": "5af7183fb1d4cf5f",
          "parentId": "6b221d5bc9e6496c",
          "name": "get /api",
          "timestamp": 1556604172355737,
          "duration": 1431,
          "kind": "SERVER",
          "localEndpoint": {
            "serviceName": "backend",
            "ipv4": "192.168.99.1",
            "port": 3306
          },
          "remoteEndpoint": {
            "ipv4": "172.19.0.2",
            "port": 58648
          },
          "tags": {
            "http.method": "GET",
            "http.path": "/api"
          }
        }
      }
    }
  }
}